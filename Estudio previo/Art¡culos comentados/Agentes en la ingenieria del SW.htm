<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.5 [es]C-CCK-MCD Alehop  (Win98; I) [Netscape]">
   <title>Agentes en la ingenieria del SW</title>
</head>
<body background="../../../_themes/sumipntg/sumtextb.jpg" tppabs="http://www.fdi.ucm.es/_themes/sumipntg/sumtextb.jpg" bgcolor="#FFFFFF" text="#000066" link="#3333CC" vlink="#666699" alink="#990099"><!--mstheme--><font face="Verdana, Arial, Helvetica">

<b><u><font size=+1>Resumen del art&iacute;culo
"On agent-based software engineering", de Nicholas R. Jennings</font></u></b>
<p>&nbsp;&nbsp;&nbsp; El art&iacute;culo realiza un an&aacute;lisis de
los sitemas basados en agentes, desde el punto de vista de aplicar estos
sistemas a la construcci&oacute;n de software que resuelva "problemas del
mundo real", es decir, analiza la adopci&oacute;n de estos sistemas por
parte del modelo de la Ingenier&iacute;a del Software.
<br>&nbsp;
<p>&nbsp;&nbsp;&nbsp; Primero (como casi todos los art&iacute;culos sobre
agentes) explica la <b><u>esencia de la computaci&oacute;n basada en agentes.</u></b>
<br>&nbsp; Los agentes se pueden definir como (a) entidades que resuelven
problemas, (b) situadas en un entorno particular, (c) dise&ntilde;adas
para realizar una determinada tarea,&nbsp; (d) aut&oacute;nomas y (e) capades
de un comportamiento flexible para alcanzar sus objetivos. Adem&aacute;s,
la mayor&iacute;a de problemas requerir&aacute;n varios agentes, los cuales
tendr&aacute;n que interactuar entre s&iacute; a distintos niveles (desde
simples intercambios de informaci&oacute;n, a peticiones, actividades de
cooperaci&oacute;n, coordinaci&oacute;n y negociaci&oacute;n entre ellos).
<br>&nbsp;
<p>&nbsp;&nbsp;&nbsp; Una vez fijados estos conceptos, analiza la <b><u>conveniencia
de usar t&eacute;cnicas basadas en agentes en la Ingenier&iacute;a del
Software.</u></b>
<br>&nbsp; Analizando las t&eacute;cnicas para tratar problemas complejos
(del mundo real) mediante software (estas t&eacute;cnicas consisten en:
(a) descomposici&oacute;n, (b) abstracci&oacute;n y (c) organizaci&oacute;n
), as&iacute; como las caracter&iacute;sticas de esos problemas complejos,
vemos que las aproximaciones basadas en agentes son m&aacute;s apropiadas
para tratar estos problemas, ya que al tratar problemas con agentes estamos
aplicando las tres t&eacute;cnicas b&aacute;sicas para resolver problemas
complejos (descomposici&oacute;n, abstracci&oacute;n y organizaci&oacute;n).
Luego las analiza a fondo, y como el usar dise&ntilde;os basados en agentes
implica que impl&iacute;citamente contemplaremos estas t&eacute;cnicas
durante el desarrollo del sistema.
<br>&nbsp;
<p>&nbsp;&nbsp;&nbsp; Tras defender las ventajas de adoptar I.S. orientada
a agentes,<b><u> prevee como esta t&eacute;cnica ser&aacute; la sucesora
natural en el modelo de I.S.</u></b>, as&iacute; como la P.O.O. sucedi&oacute;
a la programaci&oacute;n convencional y fue adoptado por la I.S. para afrontar
proyectos de software. No quiere decir que desaparezca la P.O.O. o las
t&eacute;cnicas anteriores, s&oacute;lo que se adoptar&ntilde;a la P.O.A.
como m&ntilde;etodo de ingenier&iacute;a para resolver problemas de software.
Aprovecha para nombrar las diferencias entre P.O.O. y P.O.A. ( (a) los
objetos son pasivos; (b) los objetos no encapsulan opci&oacute;n de acci&oacute;n&nbsp;
y (c) la P.O.O. no aporta los conceptos y mecanismos adecuados para modelar
sistemas complejos ). Sobre todo las t&eacute;cnicas basadas en agentes
ser&aacute;n muy &uacute;tiles para dise&ntilde;ar sistemas abiertos, de
red, distribuidos (como en internet, de hecho en este campo ya tenemos
ejemplos de sitemas basados en agentes), por las caractrer&iacute;sticas
de estos. Y si nos fijamos en los requisitos del modelo computacional (
(a) las entidades que lo resuelvan den ser activas y aut&oacute;noma; (b)
deben hacerlo de un modo flexible,es decir, deben ser reactivos y proactivos;
(c) deben poder interactuar con otras entidades no contempladas durante
el dise&ntilde;o; y (d) debe poder representarse la estructura organizativa
de esas relaciones para poder tenerla en cuenta en el proceso de selecci&oacute;n
de las acciones a realizar ), un modelo basado en agentes es lo m&aacute;s
deseable.
<br>&nbsp;
<p>&nbsp;&nbsp;&nbsp; El art&iacute;culo tambi&eacute;n expone las posibles
<b><u>desventajas
de tomar una aproximaci&oacute;n basada en agentes en la I.S.</u></b>
<br>&nbsp; Hace hincapi&eacute; en dos principales desventajas:
<ul>
<li>
&nbsp;Aunque la flexibilidad de los agentes (entidades aut&oacute;nomas)
tiene muchas ventajas a la hora de tratar con t&eacute;cnicas de ingenier&iacute;a
problemas complejos, esta caracter&iacute;stica hace que el comportamiento
de los agentes en tiempo de ejecuci&oacute;n sea impredecible. Las decisiones
de los agentes (tomadas en tiempo real), as&iacute; como los resultados
de las interacciones entre ellos dependen de muchos factores (estado interno
del agente, precepci&oacute;n de este del entorno, ...) que no pueden preveerse
durante el dise&ntilde;o. Por tanto no se sabe de antemano como se comportar&aacute;
un agente.</li>

<li>
Esto implica que el comportamiento de todo el sistema, basado en sus componentes
(agentes), es tambi&eacute;n impredecible a priori. A esto se suma la posibilidad
de que se d&eacute; el fen&oacute;meno denomidando comportamiento emergente:
el comportamiento de un sistema no puede basarse s&oacute;lo en el comportamiento
de sus partes, pues al ser componentes tan sofisticados y flexibles, el
resultado del comportamiento colectivo ser&aacute; inesperado y, seguramente,
en algunos casos, no deseado (textualmente: " el total es usualmente m&aacute;s
grande que la suma de las partes").</li>
</ul>
&nbsp; Para solcionar esto, se pueden adoptar soluciones como protocolos
de interacci&oacute;n entre agentes, o limitar de alg&uacute;n modo la
estrucutura de comunicaci&oacute;n entre agentes, regulando de alg&uacute;n
modo su comportamiento en grupo. Esta soluci&oacute;n no es v&aacute;lida
ya que al a&ntilde;adir restricciones estamos limitando el poder que nos
daba la P.O.A.
<br>&nbsp; Por tanto, para que la P.O.A. pueda ser usada en todo su potencial,
hace falta resolver los porblemas de predicci&oacute;n de comportamiento
y comportamiento emergente de otro modo.
<br>&nbsp;
<p>&nbsp;&nbsp;&nbsp; El autor propone definir un <b><u>nuevo nivel de
computaci&oacute;n, el nivel social.</u></b>
<br>&nbsp; Este nivel es desarrollado en un ep&iacute;grafe entero. La
idea base es que este nivel deber&iacute;a proporcionar los principios
y bases sociales para sistemas basados en agentes. As&iacute; se puede
estudiar el comportamiento de todo el sistema desde este nivel, sin tener
que entrar en los detalles de implementaci&oacute;n de los agentes componentes
del mismo.
<br>Propone un nivel social compuesto de cuatro componentes principales:
(1) los agentes; (2) los canales a trav&eacute;s de los cuales esos agentes
se comunican e interact&uacute;an; (3) las dependencias existentes entre
esos agentes y (4) las relaciones de organizaci&oacute;n entre esos adentes;
m&aacute;s unas leyes (de composici&oacute;n, que definen como se unen
los agentes, seg&uacute;n sus roles, para formar el sistema; y de comportamiento,
que regula el comportamiento del sistema basado en su composici&oacute;n
y sus componentes); m&aacute;s el medio.
<br>&nbsp;
<p>&nbsp;&nbsp;&nbsp; El autor acaba con un <b><u>resumen de los objetivos
que buscaba el art&iacute;culo.</u></b>Textualmente: "la aproximaci&oacute;n
basada en agentes deber&iacute;a contemplarse como los cimientos de la
generaci&oacute;n de sistemas de ordenadores en red".
</body>
</html>
